# Default values for odoo.
# This is a YAML-formatted file.

# -- overrides the name of the chart, ignoring what is used at deployment
nameOverride: ""

# -- imagePullSecrets will be propagated to all containers, if set
imagePullSecrets: []

image:
  # -- container image
  repository: glodouk/CHANGEME
  # -- container tag
  tag: ""
  # -- container pullPolicy
  pullPolicy: Always

config:
  # -- sets odoo configuration proxy_mode
  proxyMode: "true"
  # -- sets odoo configuration without_demo
  withoutDemo: "true"
  # -- sets odoo configuration list_db
  listDB: "true"
  # -- sets odoo configuration db_filter
  dbFilter: ".*"
  # -- sets odoo configuration admin_password
  adminPassword: ""

  postgresql:
    # -- sets both odoo configuration db_host and environment variable PGHOST
    host: ""
    # -- sets both odoo configuration db_username and environment variable PGUSER
    user: ""
    # -- sets both odoo configuration db_password and environment variable PGPASSWORD
    password: ""
    # -- sets both odoo configuration db_port and environment variable PGPORT
    port: 5432
    # -- sets both odoo configuration PGDATABASE, if you are setting this, you
    # probably waant to also set config.dbFilter
    database: ""

  smtp:
    # -- sets odoo configuration smtp_server
    host: "false"
    # -- sets odoo configuration smtp_port
    port: "false"
    # -- sets odoo configuration smtp_user
    user: "false"
    # -- sets odoo configuration smtp_password
    password: "false"
    # -- sets odoo configuration smtp_ssl
    ssl: "false"

persistence:
  # -- enable /var/lib/odoo persistence, without persistence it will be temporary - and that's a bad thing!
  enabled: true
  name: "storage"
  storageClassName: "nfs-client"
  existingClaim: ""
  annotations: {}
  # -- when running deployment with replicas > 1 ReadWriteMany is a requirement, if you are in an environment without ReadWriteMany available then you will need to find an alternative solution i.e. https://github.com/camptocamp/odoo-cloud-platform/tree/14.0/base_attachment_object_storage
  accessMode: ReadWriteMany
  size: 100Gi

web:
  # -- enable Odoo web worker
  enabled: true
  name: "web"

  # -- optional extra configuration options that Doodba does not allow to be set
  # -- through environment variables
  config: |
    [options]
    limit_memory_soft = 3758096384
    limit_memory_hard = 4294967296
    limit_time_cpu = 360
    limit_time_real = 360
    limit_time_real_cron = 360
    max_cron_threads = 1
    workers = 5
    longpolling_port = 8072

  replicaCount: 1
  service:
    type: ClusterIP

  dns:
    # -- enables external-dns CRD (DNSEndpoint) creation
    enabled: false
    # -- must be DNSEndpoint compatible
    # As of time of writing only A, CNAME, TXT and SRV records are supported
    # See: https://github.com/ytsarev/external-dns/blob/master/endpoint/endpoint.go#L27-L36
    # ```yaml
    # - dnsName: "something.domain"
    #   recordTTL: 60
    #   recordType: A
    #   targets:
    #     - xx.xx.xx.xx
    # ```
    endPoints: []

  certificate:
    # -- enables cert-manager Certificate creation
    enabled: false
    secretName: "odoo-web-certificate"
    dnsNames: []
    issuerRef:
      name: letsencrypt
      kind: ClusterIssuer

  ingress:
    # -- enable Traefik IngressRoute creation
    enabled: true
    entryPoints:
      - websecure
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    match: Host(`chart-example.local`)
    middlewares: []
    tls:
      secretName: ""
      certResolver: "letsencrypt"

  # -- optional extra environment variables
  extraEnv: []
  # - name: DO_STUFF
  #   value: true

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

queue:
  # -- enable a second deployment, specifically running oca/queue_job
  enabled: false
  name: "queue"
  config: |
    [options]
    server_wide_modules = queue_job
    workers = 2
    max_cron_threads = 1
    limit_memory_soft = 3758096384
    limit_memory_hard = 4294967296
    limit_time_cpu = 14400
    limit_time_real = 14400
    limit_time_real_cron = 14400
  replicaCount: 1

  # -- optional extra environment variables
  extraEnv: []
  # - name: DO_STUFF
  #   value: true

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1

upgrade:
  # -- enable click-odoo-update on helm chart upgrade
  enabled: true
  name: "upgrade"

# -- Use extraManifests (string) to add. This is run through the templating system, and may be useful to create custom additional deployments, statefulsets, etc. that need a "rollme" annotation changed to force redeployment after changes are made.
extraManifests: ""

velero:
  # -- enable creation of velero schedule
  enabled: false
  name: "backup"
  # -- see https://velero.io/docs/v1.9/customize-installation/#default-pod-volume-backup-to-restic
  defaultVolumesToRestic: true
  # -- see https://velero.io/docs/v1.9/resource-filtering/#--include-cluster-resources
  includeClusterResources: false
  # -- schedule to run on
  schedule: "5 6,12,18 * * *"
  # -- backup retention period
  ttl: 336h0m00s
  # -- automatically take a pg_dump (custom format) of $PGDATABASE to /var/lib/odoo/$PGDATABASE.dump
  pgDumpHook: true
  # -- additional hooks
  extraHooks: []
