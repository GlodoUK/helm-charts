{{- if and .Values.web.enabled .Values.web.ingress.enabled (eq .Values.web.ingress.type "IngressRoute") }}
{{- $fullname := include "odoo.web.fullname" . -}}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ $fullname }}
  labels:
    {{- include "odoo.common.labels" . | nindent 4 }}
  {{- with .Values.web.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  entryPoints:
    {{- toYaml .Values.web.ingress.entryPoints | nindent 4 }}
  routes:
  - match: {{ .Values.web.ingress.match }}
    kind: Rule
    middlewares:
      {{- range .Values.web.ingress.middlewares }}
      - name: {{ .name }}
        namespace: {{ .namespace }}
      {{- end }}
      {{- if .Values.web.ingress.compress }}
      - name: {{ template "odoo.web.fullname" . }}-compress
        namespace: {{ .Release.Namespace }}
      {{- end }}
    services:
    - name: {{ $fullname }}
      port: 8069
  - match: ({{ .Values.web.ingress.match }}) && PathPrefix(`{{ .Values.web.ingress.geventPath }}`)
    kind: Rule
    middlewares:
      {{- range .Values.web.ingress.middlewares }}
      - name: {{ .name }}
        namespace: {{ .namespace }}
      {{- end }}
      {{- if .Values.web.ingress.compress }}
      - name: {{ template "odoo.web.fullname" . }}-compress
        namespace: {{ .Release.Namespace }}
      {{- end }}
    services:
    {{- if and .Values.longpolling .Values.longpolling.enabled }}
    - name: {{ include "odoo.longpolling.fullname" . }}
      port: 8072
    {{- else }}
    - name: {{ $fullname }}
      port: 8072
    {{- end }}
  {{- if .Values.web.certificate.enabled }}
  tls:
    secretName: {{ .Values.web.certificate.secretName }}
  {{- else if (or .Values.web.ingress.tls.secretName .Values.web.ingress.tls.certResolver) }}
  tls:
  {{- if .Values.web.ingress.tls.secretName }}
    secretName: {{ .Values.web.ingress.tls.secretName }}
  {{- end }}
  {{- if and (not .Values.web.certificate.enabled) .Values.web.ingress.tls.certResolver }}
    certResolver: {{ .Values.web.ingress.tls.certResolver }}
  {{- end }}
  {{- end }}
{{- end }}
